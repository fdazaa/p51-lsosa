<?php

/**
 * @file
 * Functions to support theming in the Tailwind CSS theme.
 */

/**
 * Implements hook_preprocess_HOOK().
 */
//  function tietheme_preprocess_block(&$variables) {
//    if (tietheme_get_active_theme() == 'tietheme' && $variables['base_plugin_id'] == 'system_branding_block') {
//      $variables['site_logo'] = '';
//      if ($variables['content']['site_logo']['#access'] && $variables['content']['site_logo']['#uri']) {
//        $variables['site_logo'] = str_replace('.svg', '.png', $variables['content']['site_logo']['#uri']);
//      }
//    }
//  }
use Drupal\block\Entity\Block;

/**
 * Get the active theme.
 *
 * @return string
 *   The name of the active theme.
 */
function tietheme_get_active_theme() {
  return \Drupal::service('theme.manager')->getActiveTheme()->getName();
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * Pass block region value to content so this can be used in
 * MYTHEME_theme_suggestions_menu_alter.
 */
function tietheme_preprocess_block(&$variables) {
  if (tietheme_get_active_theme() == 'tietheme' && $variables['base_plugin_id'] == 'system_branding_block') {
    $variables['site_logo'] = '';
    if ($variables['content']['site_logo']['#access'] && $variables['content']['site_logo']['#uri']) {
      $variables['site_logo'] = str_replace('.svg', '.png', $variables['content']['site_logo']['#uri']);
    }
  }
  if (isset($variables['elements']['#id'])) {
    $region = Block::load($variables['elements']['#id'])->getRegion();
    $variables['content']['#attributes']['region'] = $region;
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Provide region based menu suggestions.
 */
function tietheme_theme_suggestions_menu_alter(&$suggestions, array $variables) {
  if (isset($variables['attributes']['region'])) {
    $suggestion = 'menu__' . $variables['menu_name'] . '__' . $variables['attributes']['region'];
    $suggestion = str_replace('-', '_', $suggestion);
    $suggestions[] = $suggestion;
  }
}

function tietheme_preprocess_user(&$variables)
{
  $account = $variables['elements']['#user'];
  $variables['pruebas'] = $account -> getDisplayName();
}

/**
 * Implements hook_preprocess_HOOK().
 */
function tietheme_preprocess_page(&$variables)
{
  $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
  $picture = $user->user_picture->view('thumbnail');
  $variables['imagen'] = $picture;
}




/**
 * Implements hook_theme_suggestions_HOOK_alter().views general
 */
//function tietheme_theme_suggestions_views_view_alter(array &$suggestions, array $variables)//
  // If you want you can add a template suggestion for all views
  // based on their ID:
//{//
  //$suggestions[] =sprintf('views_view__%s', $variables['view']->id());//
//}//

/**
 * Implements hook_theme_suggestions_HOOK_alter().views campos
 */
//function tietheme_theme_suggestions_views_view_field_alter(array &$suggestions, array $variables) {//
  // Check here the id, add suggestions, do whatever you want
  // ...
  //$suggestions[] =sprintf('views_view_field__%s', $variables['view']->id());//
//}//



//status messages//
/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function tietheme_theme_suggestions_status_messages_alter(array &$suggestions, array $variables)
{
  $route = \Drupal::routeMatch();
  $suggestions[] = 'status_messages__'.str_replace('.','_', $route->getRouteName());
}


/**
 * Implements hook_theme_suggestions_HOOK_alter().tables
 * @param array $suggestions
 * @param array $variables
 * @param $hook
 */
function tietheme_theme_suggestions_table_alter(array &$suggestions, array &$variables, $hook)
{
  $route = \Drupal::routeMatch();
  $suggestions[] = 'table__'.str_replace('.','_', $route->getRouteName());
}
