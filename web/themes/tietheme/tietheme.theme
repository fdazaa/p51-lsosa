<?php

/**
 * @file
 * Functions to support theming in the Tailwind CSS theme.
 */

/**
 * Implements hook_preprocess_HOOK().
 */
//  function tietheme_preprocess_block(&$variables) {
//    if (tietheme_get_active_theme() == 'tietheme' && $variables['base_plugin_id'] == 'system_branding_block') {
//      $variables['site_logo'] = '';
//      if ($variables['content']['site_logo']['#access'] && $variables['content']['site_logo']['#uri']) {
//        $variables['site_logo'] = str_replace('.svg', '.png', $variables['content']['site_logo']['#uri']);
//      }
//    }
//  }
use Drupal\block\Entity\Block;

/**
 * Get the active theme.
 *
 * @return string
 *   The name of the active theme.
 */
function tietheme_get_active_theme() {
  return \Drupal::service('theme.manager')->getActiveTheme()->getName();
}


/**
 * Implements hook_preprocess_HOOK().
 *
 * Pass block region value to content so this can be used in
 * MYTHEME_theme_suggestions_menu_alter.
 */
function tietheme_preprocess_block(&$variables) {
  if (tietheme_get_active_theme() == 'tietheme' && $variables['base_plugin_id'] == 'system_branding_block') {
    $variables['site_logo'] = '';
    if ($variables['content']['site_logo']['#access'] && $variables['content']['site_logo']['#uri']) {
      $variables['site_logo'] = str_replace('.svg', '.png', $variables['content']['site_logo']['#uri']);
    }
  }
  if (isset($variables['elements']['#id'])) {
    $region = Block::load($variables['elements']['#id'])->getRegion();
    $variables['content']['#attributes']['region'] = $region;
  }

}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 *
 * Provide region based menu suggestions.
 */
function tietheme_theme_suggestions_menu_alter(&$suggestions, array $variables) {
  if (isset($variables['attributes']['region'])) {
    $suggestion = 'menu__' . $variables['menu_name'] . '__' . $variables['attributes']['region'];
    $suggestion = str_replace('-', '_', $suggestion);
    $suggestions[] = $suggestion;
  }
}



/**
*function tietheme_preprocess_menus(&$menu_name) {
*  dpm($menu_name, 'IMPRIME VARIABLES');
*}*/

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
// function tietheme_theme_suggestions_page_alter(array &$suggestions, array $variables) {

//   if (\Drupal::currentUser()->isAuthenticated()){
//     $suggestions[] = 'page__autenticado';
//   }
//     dpm($suggestions, 'suggestions');
// }


// // Get actual user role.
// $current_user_roles = \Drupal::currentUser()->getRoles();

// // Check if user is not admin.
// if (!in_array('administrator', $current_user_roles)) {}

// // Check if user is an admin.
// if (in_array('administrator', $current_user_roles)) {}

/**
 * Implements hook_preprocess_HOOK().
 */
/**
 * Implements hook_preprocess_HOOK().
 */
/*function tietheme_preprocess_page(&$variables)
{
  $variables['tietheme'] = 'prueba de preprocess en pagessssssssssss';
  $variables['userrs'] = 'Imprimaaaaaaaaaaaaaaaaaaa';

}*/




function tietheme_preprocess_user(&$variables)
{
  $account = $variables['elements']['#user'];
  $variables['pruebas'] = $account -> getDisplayName();

  $variables['userrs'] = 'Imprimaaaaaaaaaaaaaaaaaaa';
  dpm($variables, 'VER VARIABLES');
}

/**
 * Implements hook_preprocess_HOOK().
 */
function tietheme_preprocess_page(&$variables)
{

  $user = \Drupal\user\Entity\User::load(\Drupal::currentUser()->id());
  $picture = $user->user_picture->view('thumbnail');
  $variables['imagen'] = $picture;

 /* $pictureUri = $user->user_picture->entity->getFileUri();
  $style = \Drupal::entityTypeManager()->getStorage('image_style')->load('thumbnail');
  $urlPicture = $style->buildUrl($pictureUri);
  $variables = $urlPicture;*/

  dpm($variables, 'variables de la pagina');

}


